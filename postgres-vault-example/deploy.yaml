---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-boot-postgres
data:
  vault-agent-config.hcl: |-
    vault {
      address = "http://vault:8200"
    }

    pid_file = "/deployments/config/.pid"

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "example"
          jwt = "@/var/run/secrets/kubernetes.io/serviceaccount/token"
        }
      }

      sink "file" {
        config = {
          path = "/deployments/config/.token"
        }
      }
    }

    template {
      destination = "/deployments/config/application.properties"
      command = "curl localhost:8080/actuator/refresh"
      contents = <<EOF
    {{- with secret "secret/myapp/config" -}}
    spring.datasource.url=jdbc:postgresql://postgres-postgresql:5432/widget
    spring.datasource.username={{ .Data.data.username }}
    spring.datasource.password={{ .Data.data.password }}
    spring.jpa.hibernate.ddl-auto=none
    management.endpoints.web.exposure.include=refresh,health
    {{- end -}}
    EOF
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-postgres
  template:
    metadata:
      labels:
        app: spring-boot-postgres
    spec:
      initContainers:
        - name: vault-agent-init
          image: "docker.io/vault:1.6.2"
          args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
            - -log-level=debug
            - -exit-after-auth
          env:
            - name: SKIP_SETCAP
              value: "true"
          volumeMounts:
            - mountPath: /etc/vault/
              name: config
            - mountPath: /deployments/config
              name: shared-data
      containers:
        - name: main
          image: "quay.io/adewey/spring-boot-postgres:openshift"
          imagePullPolicy: Always
          ## This env var is required because Spring Cloud expects to connect to a remove config server by default, which we are not in this demo
          env:
            - name: SPRING_CLOUD_CONFIG_ENABLED
              value: "false"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
          volumeMounts:
            - mountPath: /deployments/config
              name: shared-data
        - name: vault-agent
          image: "docker.io/vault:1.6.2"
          args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
            - log-level=debug
          env:
            - name: SKIP_SETCAP
              value: "true"
          volumeMounts:
            - mountPath: /etc/vault/
              name: config
            - mountPath: /deployments/config
              name: shared-data
      volumes:
        - name: config
          configMap:
            name: spring-boot-postgres
        - name: shared-data
          emptyDir:
            medium: Memory
      serviceAccountName: vault-auth
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-postgres
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: spring-boot-postgres
  type: ClusterIP
